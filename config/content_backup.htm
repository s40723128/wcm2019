<h1>G1成員</h1>
<p>組長:</p>
<p>40723103 林晏瑩</p>
<p>組員:</p>
<p>40723101沈易萱</p>
<p>40723102林昱秀</p>
<p>40723104陳咨妤</p>
<p><span>40723127許嘉紘</span></p>
<p><span>40723128郭哲明</span></p>
<h1>期末報告說明</h1>
<p>各組組員請依照各頁面主題, 分別利用各自帳號下的 CMSimfly, Reveal 與 Pelican (Blogger) 內容, 引用至各相關頁面外, 再分別依據各頁面所執行的操作內容, 拍成影音說明影片, 以"<span style="color: #ff0000;">國立虎尾科技大學-機械設計工程系-網際內容管理-學號-影片主題</span>"為名稱, 上傳到各自的 Youtube 帳號下後, 嵌入到下列各頁面中, 以作為期末課程評分依據.</p>
<p>各學員將資料推送到各組網站時, 必須引用 Github 上版本提交號或連結, 並在影片內容中提供相關資料的說明與連結.</p>
<p><img alt="" height="289" src="/images/github-mark.png" width="550"/></p>
<h1>網路連線設定</h1>
<p>了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定.<br/><br/>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定.<br/><br/>瀏覽器代理主機設定<br/><br/>了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定.<br/><br/>申請 Github 帳號<br/><br/>利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲.</p>
<h2>創建Github帳號</h2>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/gSUjyc3mQic" width="500"></iframe></p>
<p>1.<span style="color: #ff0000;">先到github之網站點選創建帳號</span></p>
<p><img alt="" height="235" src="/images/chrome_2019-05-02_01-22-56.png" width="500"/></p>
<p>2.<span style="color: #ff0000;">之後會測試是否為機器人操作，下一階段為填寫為何需要github的表單，可選擇填寫(看個人)，填寫完畢即可直接進入github使用軟體。</span></p>
<p><img alt="" height="235" src="/images/chrome_2019-05-02_01-29-44.png" width="500"/></p>
<h2>設定Proxy與Chrome代理主機設定</h2>
<p>開啟proxy伺服器設定，之後得知正確分享器<span>以 DHCP client 取得 192.168.1.* 的網路位址，</span>連接成功後開啟儲存，即可完成。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ALJxzCK9nVU" width="560"></iframe></p>
<p>1.<span style="color: #ff0000;">進入proxy設定裡</span></p>
<p><img alt="" height="258" src="/images/ApplicationFrameHost_2019-05-02_00-25-14.png" width="500"/></p>
<p>2.<span style="color: #ff0000;">輸入伺服器網路位置</span></p>
<p>舉例:</p>
<p><img alt="" height="478" src="/images/ApplicationFrameHost_2019-05-02_00-37-39.png" width="500"/></p>
<p>3.<span style="color: #ff0000;">儲存後重新連接即可獲取該伺服器之網路。</span></p>
<p><img alt="" height="710" src="/images/2019-05-02_00-41-18.png" width="431"/></p>
<p><br/><br/></p>
<p></p>
<p></p>
<h1>配置可攜程式環境</h1>
<p>取得 Windows 10 64 位元環境下的可攜程式環境 (下載  2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.<br/><br/>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出.<br/><br/>了解基本的 DOS (Disk Operating System) 指令<br/><br/>C:\&gt; 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為<br/><br/>Y:\&gt;<br/><br/>若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如:<br/><br/>Y:\&gt;cd tmp<br/><br/>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是<br/><br/>Y:\tmp&gt;<br/><br/>若要再回到 Y 槽的根目錄, 可以使用 cd ..<br/><br/>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.<br/><br/>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \<br/><br/>直接回到根目錄.<br/><br/>或者從 Y:\&gt; 直接使用<br/><br/>cd \tmp\repo\ssh\wcm2019<br/><br/>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;<br/><br/>此外, 常用的 DOS 指令有:<br/><br/>dir - 列出目前所在目錄的內容<br/><br/>mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄<br/><br/>cls - clear screen, 清除目前的命令列顯示的內容</p>
<h2>下載可攜式環境並練習指令</h2>
<p><br/>40723102林昱秀</p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/nEYFt8Y2m5s" width="500"></iframe></p>
<p>40723103林晏瑩</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/srcm_CiWVtI" width="500"></iframe></p>
<p>1.<span style="color: #ff0000;">先到mde.tw之<a href="https://2019wcm.blogspot.com/" style="color: #ff0000;">網際內容管理網誌</a>點選<a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79" style="color: #ff0000;">2019_cdb_w5.7z</a> 下載</span></p>
<p><span style="color: #ff0000;"><img alt="" height="235" src="/images/chrome_2019-05-02_01-50-26.png" width="500"/></span></p>
<p>2.<span style="color: #ff0000;">開始練習指令</span></p>
<p><span style="color: #ff0000;">D:  <span style="color: #000000;">去D槽之區域gi </span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">cd </span> 進入資料夾</span></p>
<p><span style="color: #ff0000;">cd \</span>   or <span style="color: #ff0000;">cd .</span>返回根目錄</p>
<p><span style="color: #ff0000;">git init</span> 增加數據庫</p>
<p><span style="color: #ff0000;">git clone</span>下載(後面需增加網址)</p>
<p><span style="color: #ff0000;">git add .</span>  快照，將工作區資料加入索引</p>
<p><span style="color: #ff0000;">git status</span>確認工作目錄與索引狀態</p>
<p><span style="color: #ff0000;">git pull</span>檢查近遠端是否連接</p>
<p><span style="color: #ff0000;">git commit -m "檔案名稱"</span>推送上去之前所包裝之資料夾</p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git push</span>推送(會問帳號密碼)</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git branch</span>查看分支</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git merge(分支名稱) </span>將某分支合併到目前分支，有commit</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git rebase(分支名稱) </span>將目前分支合併到某分支中，不會有commit</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git  checkout</span> 將開端移動HEAD</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git log</span>檢視提交紀錄</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git log --oneline --graph --all</span>要求出現開頭的列表</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git diff</span>查看上一個資料</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git stash</span>移除上一個資料</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">python  --version</span>查看python之版本</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #ff0000;">git remote</span> 顯示遠端儲存庫</span></p>
<p><span style="color: #ff0000;">git clean</span> 刪除工作區中未被追蹤的文件</p>
<p><span color="#000000" style="color: #000000;"></span></p>
<p><span color="#000000" style="color: #000000;"></span></p>
<p><span color="#000000" style="color: #000000;"></span></p>
<p><span color="#000000" style="color: #000000;"></span></p>
<p><span color="#000000" style="color: #000000;"></span></p>
<p></p>
<h1>倉儲改版</h1>
<p>建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版<br/><br/>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令.<br/><br/>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.<br/><br/>另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.<br/><br/>git add<br/><br/>git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.<br/><br/>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:<br/><br/>git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add<br/><br/>git commit<span> </span><br/><br/>git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.<br/><br/>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.<br/><br/>git push<br/><br/>git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.</p>
<h2>進入倉儲之步驟</h2>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/tJLm3IDbi54" width="500"></iframe></p>
<p>1<span style="color: #ff0000;">.先複製倉儲之網址</span></p>
<p><span style="color: #000000;"><img alt="" height="235" src="/images/chrome_2019-05-02_01-39-32.png" width="500"/></span></p>
<p><span style="color: #000000;">2.<span style="color: #ff0000;">之後git clone下來</span></span></p>
<p><span style="color: #000000;"><img alt="" height="300" src="/images/cmd_2019-05-02_01-40-24.png" width="500"/></span></p>
<p><span style="color: #000000;">3.<span style="color: #ff0000;">下載完成後打開近端</span></span></p>
<p><span style="color: #000000;"><img alt="" height="144" src="/images/cmd_2019-05-02_01-41-20.png" width="500"/></span></p>
<p><span style="color: #000000;">4.<span style="color: #ff0000;">複製網址後Login完即可對倉儲改版</span></span></p>
<p><br/><br/><span style="color: #000000;"><img alt="" height="329" src="/images/chrome_2019-05-02_01-42-35.png" width="700"/></span></p>
<h2>倉儲合併衝突</h2>
<p>40723102第一次與g1倉儲產生合併衝突</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/os31rKiqWuo" width="500"></iframe></p>
<p>解決方法:</p>
<h1>靜態 CMSimfly</h1>
<p>利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站<br/><br/>設法利用<span> </span><a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%B8%89.html">HTML5 CSS 與 Javascript</a>, 納入與機械設計相關的靜態網頁內容</p>
<h2>程式碼操作</h2>
<p>舉例:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># location of boost headers:
    BOOST_INCLUDEPATH = "y:/boost_1_66_0"    # (e.g. Windows)
    #BOOST_INCLUDEPATH = "/usr/local/include"    # (e.g. MacOS)
 
# location of lua headers:
    LUA_INCLUDEPATH = "y:/lua-5.1.5/src"    # (e.g. Windows)
    #LUA_INCLUDEPATH = "../../../../../mingw64/include/lua5.1"    # (e.g. Windows-MSYS2)
    #LUA_INCLUDEPATH = "../../lua5_1_4_Linux26g4_64_lib/include"    # (e.g. Ubuntu)
    #LUA_INCLUDEPATH = "/usr/local/include/lua5.1"    # (e.g. MacOS)
 
# lua libraries to link:
    LUA_LIBS = "y:/lua-5.1.5/src/liblua.a"    # (e.g. Windows)
    #LUA_LIBS = -llua5.1    # (e.g. Windows-MSYS2)
    #LUA_LIBS = -L"../../lua5_1_4_Linux26g4_64_lib/" -llua5.1    # (e.g. Ubuntu)
    #LUA_LIBS = "/usr/local/lib/liblua5.1.dylib"    # (e.g. MacOS)
 
# qscintilla location:
    QSCINTILLA_DIR = "y:/QScintilla_gpl-2.10.2"    # (e.g. Windows)
    #QSCINTILLA_DIR = "../../QScintilla-commercial-2.7.2"    # (e.g. Windows-MSYS2)
    #QSCINTILLA_DIR = "../../QScintilla-commercial-2.7.2"    # (e.g. Ubuntu)
    #QSCINTILLA_DIR = "../../QScintilla-commercial-2.7.2"    # (e.g. MacOS)
 
# qscintilla headers:
    QSCINTILLA_INCLUDEPATH = "$${QSCINTILLA_DIR}/include" "$${QSCINTILLA_DIR}/Qt4Qt5"
 
# qscintilla libraries to link:
    QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/libqscintilla2_qt5d.dll.a"    # (e.g. Windows)
    #QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/release/release/libqscintilla2.dll.a"    # (e.g. Windows-MSYS2)    
    #QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/release/libqscintilla2.so"    # (e.g. Ubuntu)
    #QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/release/libqscintilla2.9.0.2.dylib"    # (e.g. MacOS)
 
# Make sure if a config.pri is found one level above, that it will be used instead of this one:
    exists(../config.pri) { include(../config.pri) }</pre>
<p></p>
<h1>Mobile 網站內容</h1>
<p>參考倉儲:<span> </span><a href="https://github.com/mdecourse/acmsimfly">https://github.com/mdecourse/acmsimfly</a></p>
<p>參考網站:<span> </span><a href="http://mde.tw/acmsimfly">http://mde.tw/acmsimfly</a></p>
<p><br/>學習如何使用 CMSimfly, 在網站中加入各種內容 (導入 Bootstrap frontend framework)<br/><br/>使用 Flask, bs4 與 lxml 模組<br/><br/>了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統</p>
<h1>Virtual Host</h1>
<p>參考 vdi:<br/><br/>位於雲端的<span> </span><a href="https://drive.google.com/file/d/1bSBdEPVn6IG22cVLpTbY97JY16vjlatz/view?usp=sharing">Ubuntu 18.04_201904.vdi</a><span> </span>(約 9 GB) - 已經配置 Fossil SCM: https 5443, Host-only: 192.168.56.2, https: 443 and 8843 for CMSimfly, Squid Proxy Server.<br/><br/>假如要利用 USB 隨身碟存放上述約 9 GB 的 Ubuntu 18.04 vdi 檔案, 必須將隨身碟格式化為 NTFS, 若採 Fat32 格式, 最大單一檔案必須小於 4 GB.<br/><br/>另外在近端有一類似的檔案, 可提供上課學員下載:<br/><br/><a href="http://wcmg1.kmol.info:88/ub1804_nox.vdi">http://wcmg1.kmol.info:88/ub1804_nox.vdi</a><span> </span>(僅限近端用戶使用 IPv6 協定者下載)</p>
<p>Fossil SCM<br/><br/>如何利用 Fossil SCM, 在 Virtualbox 中的 Ubuntu 18.04-2 (8.5 GB) 建立類似 Github 的系統, 可以放入 CMSimfly 的靜態網頁<br/><br/>Ubuntu 18.04 (https://www.ubuntu.com/about/release-cycle), 配置網路連線, 然後架構 uwsgi 環境下的 CMSimfly 動態網站, 或建立 Fossil SCM 用來伺服管理 CMSimfly 下有版次管理的靜態網頁, 或利用 nginx 伺服無版次管理的 CMSimfly 靜態網頁.</p>
<h2>Virtual 虛擬主機設定</h2>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/aDRXxs25UYM" width="500"></iframe></p>
<p>1.<span style="color: #ff0000;">先下載軟件安裝</span></p>
<p><img alt="" height="268" src="/images/chrome_2019-05-02_14-35-53.png" width="500"/></p>
<p>2.<span style="color: #ff0000;">開始設定軟件驅動路徑</span></p>
<p><img alt="" height="263" src="/images/chrome_2019-05-02_14-36-08.png" width="500"/></p>
<p>3.<span style="color: #ff0000;">之後開啟虛擬主機，嘗試打開網頁，如打不開網頁可嘗試下列步驟解決</span></p>
<p><img alt="" height="406" src="/images/chrome_2019-05-02_14-36-41.png" width="500"/></p>
<p>帳號密碼kmol2019</p>
<p>ifconfig</p>
<p>cd/etc/netplan</p>
<p>is -1</p>
<p>sudo vi 50-cloud-init.yuml  按enter</p>
<p>kmol2019</p>
<p>進入編輯模式，將True變更為False</p>
<p>不是DHCP  </p>
<p>設定addresses</p>
<p>啟動-192.168.56.2/24</p>
<p>要有gateway4:192.168.56.1</p>
<p>可重新讀取</p>
<p>跳出編輯模式，按下esc     :wq</p>
<p>sudo netplan apply</p>
<p>ifconfig</p>
<p>假如還是開不了網頁，回到根目錄cd</p>
<p>回到編輯模式查看是否設定錯誤，cd uwsgi-ini</p>
<p>                                                                              is -1</p>
<p>                                                                             sudo vi uwsgi.ini </p>
<p>源成設定後，即可開啟網頁。</p>
<p><img alt="" height="361" src="/images/chrome_2019-04-30_15-30-12.png" width="600"/></p>
<p>分別有兩個網頁需開啟</p>
<p><img alt="" height="301" src="/images/2019-04-30_15-30-03.png" width="500"/></p>
<h1>G1期中資料</h1>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; d027fa629b2a802852ab05e21f562c247b7d7df2</p>
<p>40723101沈易萱</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/L2CcWxgyY3Q" width="500"></iframe></p>
<p>40723102林昱秀</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/utYfjx9fQ2o" width="500"></iframe></p>
<p>40723103林晏瑩</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/_7L11FDH3rU" width="500"></iframe></p>
<p>40723104陳咨妤</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/vw01PYlr7Hc" width="500"></iframe></p>
<p>40723127許嘉紘</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/C7vEZgBVBXc" width="500"></iframe></p>
<p>40723128郭哲明</p>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/xOyw4eNSXKc" width="500"></iframe></p>
<p></p>
<h2>導入ungit</h2>
<p><span>nodejs裡面有ungit-&gt;程式為nodejs所寫，nodejs位置在</span><span>appdata-&gt;roming-&gt;npm-&gt;ungi</span><span> 。</span><br/><span>程式碼在appdata-&gt;roming-&gt;npm-&gt;node-modules-&gt;ungit-&gt;CHANGELOG.md。</span><br/><b><br/></b><span></span></p>
<h4>start.bat跟start.cadlab.bat差別</h4>
<p><span>因Home位置不同，適用範圍有所不同!!</span><br/><span>start.bat=&gt;學校外適用。</span><br/><span>start.cadlab.bat=&gt;學校內適用，不能使用在學校外的地方。</span><br/><br/></p>
<h4>STAPE1</h4>
<p><br/><span>1.設定路徑=&gt;</span><br/><span>    set path8=%Disk%:\nodejs;%Disk%:\nodejs\appdata\roaming\npm;放置到start.cadlab的sciTE裡      的path7後。</span></p>
<div><span><br/></span><span>2.將 path8 納入 path 設定=&gt;</span><br/><span>    %path8%；-&gt;讓nodejs.ungit直行即可使用。</span><br/>
<div><span>    在同上步驟中的sciTE中有path程式碼將%path8%；直接放在最後方。</span></div>
<div><span> </span></div>
<div><span>3.分別start.bat跟start.cadlab.bat都如上兩步驟操作並儲存。</span></div>
<div><span> </span></div>
<div><span>4.按start.cadlab.bat打入ungit可作執行，之後出現頁面表示設定成功，按允許儲存，再將跳出        的網頁關掉。</span></div>
<div><span> </span></div>
<div><span>5.針對nodejs設定路徑=&gt;</span></div>
<div><span>    [set. USERPROFILE=%Disk%:\home]start.cadlab.bat中需加入以上程式碼                在 set.HOME=%Disk%:\home-cadlab之下方增加。</span></div>
<div><span>  *將以上程式關掉(剛才使用的程式碼還不用關。若關掉，kmol-2019-&gt;data-&gt;scite-&gt;bin-&gt;按          scite黑色圓點。</span></div>
<div><span>以便能作動，因nodejs系統user的路徑找git的設定檔，但找不到，又因為需變為可攜程式，必須透過上述方式來作動!!</span></div>
<div><span>6.start.bat也是上述步驟重複一遍。完成初步動作。。。。。</span></div>
</div>
<h4>STAPE2</h4>
<div><span>可在mde.tw中2019 spring...裡，實習任務之任務2有明確步驟可找到下面的程式。</span></div>
<div><span>ungit --launchBrowser=0 --launchCommand "C:\PROGRA~2\Google\Chrome\Application\chrome.exe  %U"</span></div>
<div><span>需使用簡寫，不然無法啟動。並新建批次檔。</span></div>
<h2>Virtualbox操作</h2>
<p><iframe allowfullscreen="allowfullscreen" height="360" src="//www.youtube.com/embed/aDRXxs25UYM" width="500"></iframe></p>
<p></p>
<p><span>第一屆段完成後打https://192.168.56.2可出現以下網頁</span></p>
<p><span></span></p>
<p><img alt="" height="360" src="/images/chrome_2019-04-30_15-30-12.png" width="598"/></p>
<p><span>打https://192.168.56.2:5443可開啟網頁</span></p>
<p><img alt="" height="301" src="/images/2019-04-30_15-30-03.png" width="500"/></p>
<p></p>
<p></p>
<p></p>
<h2>插入程式碼</h2>
<p>CMSimfly 目前使用 Syntaxhighlighter 3.0.83:</p>
<p> <a href="http://alexgorbatchev.com/SyntaxHighlighter/">http://alexgorbatchev.com/SyntaxHighlighter/</a> </p>
<p>進行頁面中的程式碼高亮顯示.</p>
<h3>Java 程式碼</h3>
<pre class="brush:java;auto-links:false;toolbar:false" contenteditable="false">import java.util.Scanner;

public class Life {
    public static void show(boolean[][] grid){
        String s = "";
        for(boolean[] row : grid){
            for(boolean val : row)
                if(val)
                    s += "*";
                else
                    s += ".";
            s += "\n";
        }
        System.out.println(s);
    }
    
    public static boolean[][] gen(){
        boolean[][] grid = new boolean[10][10];
        for(int r = 0; r &lt; 10; r++)
            for(int c = 0; c &lt; 10; c++)
                if( Math.random() &gt; 0.7 )
                    grid[r][c] = true;
        return grid;
    }
    
    public static void main(String[] args){
        boolean[][] world = gen();
        show(world);
        System.out.println();
        world = nextGen(world);
        show(world);
        Scanner s = new Scanner(System.in);
        while(s.nextLine().length() == 0){
            System.out.println();
            world = nextGen(world);
            show(world);
            
        }
    }
    
    public static boolean[][] nextGen(boolean[][] world){
        boolean[][] newWorld 
            = new boolean[world.length][world[0].length];
        int num;
        for(int r = 0; r &lt; world.length; r++){
            for(int c = 0; c &lt; world[0].length; c++){
                num = numNeighbors(world, r, c);
                if( occupiedNext(num, world[r][c]) )
                    newWorld[r][c] = true;
            }
        }
        return newWorld;
    }
    
    public static boolean occupiedNext(int numNeighbors, boolean occupied){
        if( occupied &amp;&amp; (numNeighbors == 2 || numNeighbors == 3))
            return true;
        else if (!occupied &amp;&amp; numNeighbors == 3)
            return true;
        else
            return false;
    }

    private static int numNeighbors(boolean[][] world, int row, int col) {
        int num = world[row][col] ? -1 : 0;
        for(int r = row - 1; r &lt;= row + 1; r++)
            for(int c = col - 1; c &lt;= col + 1; c++)
                if( inbounds(world, r, c) &amp;&amp; world[r][c] )
                    num++;

        return num;
    }

    private static boolean inbounds(boolean[][] world, int r, int c) {
        return r &gt;= 0 &amp;&amp; r &lt; world.length &amp;&amp; c &gt;= 0 &amp;&amp;
        c &lt; world[0].length;
    }

}</pre>
<p></p>
<h3>Python 程式碼</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def parse_content():
    """use bs4 and re module functions to parse content.htm"""
    #from pybean import Store, SQLiteWriter
    # if no content.db, create database file with cms table
    '''
    if not os.path.isfile(config_dir+"content.db"):
        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))
        cms = library.new("cms")
        cms.follow = 0
        cms.title = "head 1"
        cms.content = "content 1"
        cms.memo = "first memo"
        library.save(cms)
        library.commit()
    '''
    # if no content.htm, generate a head 1 and content 1 file
    if not os.path.isfile(config_dir+"content.htm"):
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
    subject = file_get_contents(config_dir+"content.htm")
    # deal with content without content
    if subject == "":
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
        subject = "&lt;h1&gt;head 1&lt;/h1&gt;content 1"
    # initialize the return lists
    head_list = []
    level_list = []
    page_list = []
    # make the soup out of the html content
    soup = bs4.BeautifulSoup(subject, 'html.parser')
    # 嘗試解讀各種情況下的標題
    soup = _remove_h123_attrs(soup)
    # 改寫 content.htm 後重新取 subject
    with open(config_dir + "content.htm", "wb") as f:
        f.write(soup.encode("utf-8"))
    subject = file_get_contents(config_dir+"content.htm")
    # get all h1, h2, h3 tags into list
    htag= soup.find_all(['h1', 'h2', 'h3'])
    n = len(htag)
    # get the page content to split subject using each h tag
    temp_data = subject.split(str(htag[0]))
    if len(temp_data) &gt; 2:
        subject = str(htag[0]).join(temp_data[1:])
    else:
        subject = temp_data[1]
    if n &gt;1:
            # i from 1 to i-1
            for i in range(1, len(htag)):
                head_list.append(htag[i-1].text.strip())
                # use name attribute of h* tag to get h1, h2 or h3
                # the number of h1, h2 or h3 is the level of page menu
                level_list.append(htag[i-1].name[1])
                temp_data = subject.split(str(htag[i]))
                if len(temp_data) &gt; 2:
                    subject = str(htag[i]).join(temp_data[1:])
                else:
                    subject = temp_data[1]
                # cut the other page content out of htag from 1 to i-1
                cut = temp_data[0]
                # add the page content
                page_list.append(cut)
    # last i
    # add the last page title
    head_list.append(htag[n-1].text.strip())
    # add the last level
    level_list.append(htag[n-1].name[1])
    temp_data = subject.split(str(htag[n-1]))
    # the last subject
    subject = temp_data[0]
    # cut the last page content out
    cut = temp_data[0]
    # the last page content
    page_list.append(cut)
    return head_list, level_list, page_list

</pre>
<p></p>
<h3>C或C++程式碼</h3>
<p>請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為  "C/C++程式碼", 則無法進行分頁.</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">/* Runge Kutta for a set of first order differential equations */
 
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
 
#define N 2 /* number of first order equations */
#define dist 0.1 /* stepsize in t*/
#define MAX 30.0 /* max for t */
 
FILE *output; /* internal filename */
FILE *output1; /* internal filename */
// 利用 pipe 呼叫 gnuplot 繪圖
FILE *pipe;
 
void runge4(double x, double y[], double step); /* Runge-Kutta function */
double f(double x, double y[], int i); /* function for derivatives */
 
void main(){
 
  double t, y[N];
  int j;
 
  output=fopen("osc.dat", "w"); /* external filename */
  output1=fopen("osc1.dat", "w"); /* external filename */
 
  y[0]=1.0; /* initial position */
  y[1]=0.0; /* initial velocity */
 
  //fprintf(output, "0\t%f\n", y[0]);
 
  for (j=1; j*dist&lt;=MAX ;j++) /* time loop */{
 
    t=j*dist;
    runge4(t, y, dist);
    fprintf(output, "%f\t%f\n", t, y[0]);
    fprintf(output1, "%f\t%f\n", t, y[1]);
  }
 
  fclose(output);
  fclose(output1);
 
  pipe = popen("gnuplot -persist","w");
  //fprintf(pipe,"set term png enhanced font \"v:/fireflysung.ttf\" 18 \n");
  fprintf(pipe,"set term png enhanced font \"y:/wqy-microhei.ttc\" 18 \n");
  //fprintf(pipe,"set yrange [68:70]\n");
  fprintf(pipe,"set output \"test.png\"\n");
  fprintf(pipe, "plot \"osc.dat\" title \"位移\" with lines, \"osc1.dat\" title \"速度\" with lines\n");
  fprintf(pipe,"quit\n");

  fprintf(pipe,"quit\n");
  pclose(pipe);
}
 
void runge4(double x, double y[], double step){
 
  double h=step/2.0, /* the midpoint */
  t1[N], t2[N], t3[N], /* temporary storage arrays */
  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */
  int i;
 
  for (i=0;i&lt;N;i++){
 
    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    k4[i]= step*f(x+step, t3, i);
  }
 
  for (i=0;i&lt;N;i++){
 
    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;
  }
}
 
double f(double x, double y[], int i){
 
  if (i==0)
    x=y[1]; /* derivative of first equation */
  if (i==1)
    x=-y[0]-0.5*y[1];
  return x;
}</pre>
<p></p>
<h3>Lua 程式碼</h3>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 js 模組
js = require("js")
-- 取得 window
window = js.global
-- 猜小於或等於 n 的整數
big = 100
-- 計算猜測次數, 配合 while 至少會猜一次
num = 1
-- 利用 window:prompt 方法回應取得使用者所猜的整數
guess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")
-- 利用數學模組的 random 函數以亂數產生答案
answer = math.random(big)
output = ""
-- 若沒猜對, 一直猜到對為止
while answer ~= tonumber(guess) do
    if answer &gt; tonumber(guess) then
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"
        print(output)
    else
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"
        print(output)
    end 
    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")
    num = num + 1
end
print("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")
    </pre>
<p></p>
<h3>Javascript 程式碼</h3>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">STLViewer = function(stlpath, plotarea) {

	var mycanvas = document.getElementById(plotarea);
	var viewer = new JSC3D.Viewer(mycanvas)
	var theScene = new JSC3D.Scene;
	////Initialize with a default file:
	//var stlpath = "../../../assets/2013-10-23/stl/box.STL"
	//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"
	viewer.setParameter('SceneUrl', stlpath);
    viewer.setParameter('InitRotationX', 20);
	viewer.setParameter('InitRotationY', 20);
	viewer.setParameter('InitRotationZ', 0);
	viewer.setParameter('ModelColor', '#CAA618');
	viewer.setParameter('BackgroundColor1', '#FFFFFF');
	viewer.setParameter('BackgroundColor2', '#383840');
	viewer.init();
	viewer.update();
	////init done
	var canvas_drop = document.getElementById('canvas-drop')
	/*var dropzone = document.getElementById('dropzone')
	dropzone.addEventListener('dragover', handleDragOver, false);
	dropzone.addEventListener('drop', handleFileSelect, false); */
	canvas_drop.addEventListener('dragover', handleDragOver, false);
	canvas_drop.addEventListener('drop', handleFileSelect, false);

////Drag and drop logic:
	function handleFileSelect(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    var files = evt.dataTransfer.files;
	    console.log(evt)
	    console.log(files)
	    preview_stl(files[0])
	  }

	  function handleDragOver(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    evt.dataTransfer.dropEffect = 'copy';
	  }

////jsc3d logic
	var handle_file_select = function(e) {
		e.stopPropagation()
		e.preventDefault()
		var f = e.target.files[0]
		preview_stl(f)
	}

	function preview_stl(f) {
		var reader = new FileReader()
		var ext = f.name.split(".")[1]

		function setup_viewer() {
			viewer.setParameter('InitRotationX', 20);
			viewer.setParameter('InitRotationY', 20);
			viewer.setParameter('InitRotationZ', 0);
			viewer.setParameter('ModelColor', '#CAA618');
			viewer.setParameter('BackgroundColor1', '#FFFFFF');
			viewer.setParameter('BackgroundColor2', '#383840');
			viewer.setParameter('RenderMode', "flat");
		}
		setup_viewer()

		reader.onload = (function(file) {
			return function(e) {
				theScene = new JSC3D.Scene
		    	stl_loader = new JSC3D.StlLoader()
		    	stl_loader.parseStl(theScene, e.target.result)
		      	//viewer.init()
		      	viewer.replaceScene(theScene)
		      	viewer.update()
		      	console.log("file reader onload")
			}
		})(f)

		if (ext.toLowerCase() != "stl") {
			alert("That doesn't appear to be an STL file.");
		} else {
			reader.readAsBinaryString(f)
		}
	}
}
</pre>
<p></p>
<h3>Html 原始碼</h3>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;html&gt;
   &lt;head&gt;
      &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
      &lt;title&gt;CMSimfly&lt;/title&gt;
      &lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;div class='container'&gt;
      &lt;nav&gt;
         &lt;ul id='css3menu1' class='topmenu'&gt;
            &lt;li&gt;&lt;a href='/get_page/簡介'&gt;簡介&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/目錄結構'&gt;目錄結構&lt;/a&gt;
            &lt;li&gt;
               &lt;a href='/get_page/頁面編輯'&gt;頁面編輯&lt;/a&gt;
               &lt;ul&gt;
                  &lt;li&gt;
                     &lt;a href='/get_page/插入程式碼'&gt;插入程式碼&lt;/a&gt;
                     &lt;ul&gt;
                        &lt;li&gt;&lt;a href='/get_page/Java 程式碼'&gt;Java 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Python 程式碼'&gt;Python 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/C或C++程式碼'&gt;C或C++程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Lua 程式碼'&gt;Lua 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Javascript 程式碼'&gt;Javascript 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Html 原始碼'&gt;Html 原始碼&lt;/a&gt;&lt;/li&gt;
                        &lt;/li&gt;
                     &lt;/ul&gt;
               &lt;/ul&gt;
            &lt;li&gt;&lt;a href='/get_page/網際簡報'&gt;網際簡報&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/網誌編輯'&gt;網誌編輯&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/已知錯誤'&gt;已知錯誤&lt;/a&gt;&lt;/li&gt;
         &lt;/ul&gt;
      &lt;/nav&gt;
      &lt;section&gt;
         &lt;form method='post' action='/ssavePage'&gt;
         &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;&lt;h3&gt;Html 原始碼&lt;/h3&gt;&lt;/textarea&gt;
         &lt;input type='hidden' name='page_order' value='9'&gt;
         &lt;input type='submit' value='save'&gt;
         &lt;input type=button onClick="location.href='/get_page/Html 原始碼'" value='viewpage'&gt;
         &lt;/form&gt;
      &lt;/section&gt;
   &lt;/body&gt;
&lt;/html&gt;
COPY TO CLIPBOARD	</pre>
<p></p>
<h2>批次檔案</h2>
<p><span>Q如何建立批次檔?</span><br/><br/><span>Step1；去SciTe新建檔案&gt;將程式複製貼上 &gt;Save as 在隨身碟Y槽</span><br/><span>     <span> </span></span><br/><span>             [為了與ungit作區別，因此將其名稱為kungit.bat]&gt;從可攜home找出對應的git</span><br/><span>              設定</span><br/><br/><span>Step2:去隨身碟Y槽&gt;home&gt;查看有無git設定&gt;沒有的話測試程式碼能否運作&gt;git clone測試網頁</span><br/><br/><span>打開ungit在CMS下面的各時間提交之內容&gt;[進入測試網頁&gt;打kungit指令]</span><br/><span>       <span> </span></span><br/><span>           條件:  1.必須在某個git倉儲下指令(cd....)&gt;目的為由Chrom開啟</span><br/><br/><span>                      2.必須啟動ungit對應的的\批次檔。</span><br/><span>             為了確保關閉nodejs不干擾運作，下載process explorer ，取64....的Z複製下來，貼在y槽以便隨時關閉程式。</span><br/><br/><span>找到在最下面的綠色node按右鍵kill process&gt;把nodejs上次對應的8443的批次檔關閉，指令便可正常運作。(即可不會抱怨。)</span><br/><br/><br/><span>刪除nodejs之8443的批號後，重新打入kungit指令即可看到ungit網頁跳出。</span></p>
<h3>資料上傳不上去導至網頁錯誤的原因</h3>
<h4>reaon</h4>
<div class="post-body entry-content float-container" id="post-body-6779593299493180310">Y:\&gt;cd project<br/>Y:\project&gt;dir<br/>Y:\project&gt;cd cmstest&gt;更換目錄到contest<br/><span>Y:\project\cmstest&gt;python wsgi.py</span><br/><span>進入address可改版，一˙但改版可進行版次推送</span><br/><span><br/></span><span>Login完week2打入根據[...網址...]完成ungit的配置，按github page，回到ungit網頁，push上去。</span><br/><span><br/></span><span>假如網頁出現錯誤:</span><br/><span><br/></span><span><br/></span><span>由於沒有在Home底下有對應的git config</span><br/><span>Home(外部)    Home_cadlab(內部)</span><br/><span>先檢查有無gitconfig!</span></div>
<h2>已知錯誤</h2>
<h4>全部頁面會因無法正確解讀而誤刪</h4>
<p>在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理.</p>
<h4>頁面標題不支援特殊符號</h4>
<p>各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能.</p>
<h4>Video 引用不支援內部引用</h4>
<p>tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結.</p>